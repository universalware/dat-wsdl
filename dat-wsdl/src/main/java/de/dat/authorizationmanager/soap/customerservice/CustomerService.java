
package de.dat.authorizationmanager.soap.customerservice;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CustomerService", targetNamespace = "http://sphinx.dat.de/cs")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CustomerService {


    /**
     * 
     * @param externalCustomerID
     * @param userEmail
     * @return
     *     returns de.dat.authorizationmanager.soap.customerservice.UserData
     */
    @WebMethod(action = "createOrUpdateUser")
    @WebResult(name = "loginData", targetNamespace = "")
    @RequestWrapper(localName = "createOrUpdateUser", targetNamespace = "http://sphinx.dat.de/cs", className = "de.dat.authorizationmanager.soap.customerservice.CreateOrUpdateUser")
    @ResponseWrapper(localName = "createOrUpdateUserResponse", targetNamespace = "http://sphinx.dat.de/cs", className = "de.dat.authorizationmanager.soap.customerservice.CreateOrUpdateUserResponse")
    @Action(input = "createOrUpdateUser", output = "http://sphinx.dat.de/cs/CustomerService/createOrUpdateUserResponse")
    public UserData createOrUpdateUser(
        @WebParam(name = "externalCustomerID", targetNamespace = "")
        String externalCustomerID,
        @WebParam(name = "userEmail", targetNamespace = "")
        String userEmail);

    /**
     * 
     * @param filterName
     * @param userEmail
     * @param customer
     * @return
     *     returns de.dat.authorizationmanager.soap.customerservice.UserData
     */
    @WebMethod(action = "createCustomer")
    @WebResult(name = "loginData", targetNamespace = "")
    @RequestWrapper(localName = "createCustomer", targetNamespace = "http://sphinx.dat.de/cs", className = "de.dat.authorizationmanager.soap.customerservice.CreateCustomer")
    @ResponseWrapper(localName = "createCustomerResponse", targetNamespace = "http://sphinx.dat.de/cs", className = "de.dat.authorizationmanager.soap.customerservice.CreateCustomerResponse")
    @Action(input = "createCustomer", output = "http://sphinx.dat.de/cs/CustomerService/createCustomerResponse")
    public UserData createCustomer(
        @WebParam(name = "customer", targetNamespace = "")
        CustomerDataExt customer,
        @WebParam(name = "filterName", targetNamespace = "")
        String filterName,
        @WebParam(name = "userEmail", targetNamespace = "")
        String userEmail);

    /**
     * 
     * @param filterName
     * @param customer
     * @return
     *     returns boolean
     */
    @WebMethod(action = "updateCustomer")
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "updateCustomer", targetNamespace = "http://sphinx.dat.de/cs", className = "de.dat.authorizationmanager.soap.customerservice.UpdateCustomer")
    @ResponseWrapper(localName = "updateCustomerResponse", targetNamespace = "http://sphinx.dat.de/cs", className = "de.dat.authorizationmanager.soap.customerservice.UpdateCustomerResponse")
    @Action(input = "updateCustomer", output = "http://sphinx.dat.de/cs/CustomerService/updateCustomerResponse")
    public boolean updateCustomer(
        @WebParam(name = "customer", targetNamespace = "")
        CustomerDataExt customer,
        @WebParam(name = "filterName", targetNamespace = "")
        String filterName);

    /**
     * 
     * @param externalCustomerID
     * @return
     *     returns boolean
     */
    @WebMethod(action = "disableCustomer")
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "disableCustomer", targetNamespace = "http://sphinx.dat.de/cs", className = "de.dat.authorizationmanager.soap.customerservice.DisableCustomer")
    @ResponseWrapper(localName = "disableCustomerResponse", targetNamespace = "http://sphinx.dat.de/cs", className = "de.dat.authorizationmanager.soap.customerservice.DisableCustomerResponse")
    @Action(input = "disableCustomer", output = "http://sphinx.dat.de/cs/CustomerService/disableCustomerResponse")
    public boolean disableCustomer(
        @WebParam(name = "externalCustomerID", targetNamespace = "")
        String externalCustomerID);

    /**
     * 
     * @param externalCustomerID
     * @return
     *     returns de.dat.authorizationmanager.soap.customerservice.UserData
     */
    @WebMethod(action = "getUser")
    @WebResult(name = "loginData", targetNamespace = "")
    @RequestWrapper(localName = "getUser", targetNamespace = "http://sphinx.dat.de/cs", className = "de.dat.authorizationmanager.soap.customerservice.GetUser")
    @ResponseWrapper(localName = "getUserResponse", targetNamespace = "http://sphinx.dat.de/cs", className = "de.dat.authorizationmanager.soap.customerservice.GetUserResponse")
    @Action(input = "getUser", output = "http://sphinx.dat.de/cs/CustomerService/getUserResponse")
    public UserData getUser(
        @WebParam(name = "externalCustomerID", targetNamespace = "")
        String externalCustomerID);

}
